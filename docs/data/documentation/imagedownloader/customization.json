{"metadata":{"title":"Customization","roleHeading":"API Collection","modules":[{"name":"ImageDownloader"}],"role":"collectionGroup"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/Customization"},"hierarchy":{"paths":[["doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader"],["doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader","doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/Configuration"],["doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader","doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/AsyncAwait","doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/Configuration"]]},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/imagedownloader\/customization"]}],"topicSections":[{"title":"Protocols","identifiers":["doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/ResourceIdentifierProvider","doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/StoragePathProvider","doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/ImageCompressionProvider"],"anchor":"Protocols"},{"title":"Related Articles","identifiers":["doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/CompressionProviders","doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/StorageProviders","doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/Configuration"],"anchor":"Related-Articles"}],"sections":[],"abstract":[{"type":"text","text":"Customize how images are identified, stored, and compressed."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"inlineContent":[{"type":"text","text":"ImageDownloader uses a protocol-based architecture that allows you to customize three key aspects:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Resource Identification","type":"text"}]},{"type":"text","text":" - How URLs are converted to unique identifiers"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Storage Paths"}]},{"type":"text","text":" - Where and how files are organized on disk"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Compression"}],"type":"strong"},{"text":" - How images are compressed for storage","type":"text"}]}]}],"type":"orderedList"},{"inlineContent":[{"type":"text","text":"All customization is done through providers that implement simple protocols."}],"type":"paragraph"},{"level":2,"text":"Quick Example","anchor":"Quick-Example","type":"heading"},{"code":["import ImageDownloader","","\/\/ Use JPEG compression to save 70% disk space","let config = ImageDownloaderConfiguration(","    compressionProvider: JPEGCompressionProvider(quality: 0.8)",")","","ImageDownloaderManager.shared.configure(config)"],"syntax":"swift","type":"codeListing"},{"level":2,"text":"Compression Customization","anchor":"Compression-Customization","type":"heading"},{"level":3,"text":"JPEG Compression (Recommended for Photos)","anchor":"JPEG-Compression-Recommended-for-Photos","type":"heading"},{"inlineContent":[{"type":"text","text":"Save 50-80% disk space with JPEG compression:"}],"type":"paragraph"},{"code":["let config = ImageDownloaderConfiguration(","    compressionProvider: JPEGCompressionProvider(quality: 0.8)",")"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"inlineContent":[{"text":"Quality Guide:","type":"text"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"1.0"},{"type":"text","text":" - Maximum quality, minimal compression"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"0.8"},{"text":" - Recommended (good balance)","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"0.6","type":"codeVoice"},{"type":"text","text":" - High compression, some artifacts"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"0.4","type":"codeVoice"},{"text":" - Maximum compression, poor quality","type":"text"}]}]}],"type":"unorderedList"},{"level":3,"text":"Adaptive Compression (Smart Selection)","anchor":"Adaptive-Compression-Smart-Selection","type":"heading"},{"inlineContent":[{"text":"Automatically choose PNG or JPEG based on image size:","type":"text"}],"type":"paragraph"},{"code":["let config = ImageDownloaderConfiguration(","    compressionProvider: AdaptiveCompressionProvider(","        sizeThresholdMB: 1.0,  \/\/ Use JPEG if PNG > 1MB","        jpegQuality: 0.85","    )",")"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"inlineContent":[{"text":"How it works:","type":"text"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Compresses as PNG first"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"If PNG size exceeds threshold, re-compresses as JPEG"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Stores the smaller result"}]}]}],"type":"orderedList"},{"level":3,"text":"PNG Compression (Default)","anchor":"PNG-Compression-Default","type":"heading"},{"inlineContent":[{"type":"text","text":"Lossless compression, larger file sizes:"}],"type":"paragraph"},{"code":["let config = ImageDownloaderConfiguration(","    compressionProvider: PNGCompressionProvider()",")"],"syntax":"swift","type":"codeListing"},{"level":2,"text":"Storage Path Customization","anchor":"Storage-Path-Customization","type":"heading"},{"level":3,"text":"Flat Storage (Default)","anchor":"Flat-Storage-Default","type":"heading"},{"inlineContent":[{"type":"text","text":"All files in a single directory:"}],"type":"paragraph"},{"code":["let config = ImageDownloaderConfiguration(","    pathProvider: FlatStoragePathProvider()",")","","\/\/ Result: ImageDownloaderStorage\/abc123_image.png"],"syntax":"swift","type":"codeListing"},{"level":3,"text":"Domain-Based Hierarchy","anchor":"Domain-Based-Hierarchy","type":"heading"},{"inlineContent":[{"text":"Organize by domain for better file system performance:","type":"text"}],"type":"paragraph"},{"code":["let config = ImageDownloaderConfiguration(","    pathProvider: DomainHierarchicalPathProvider()",")","","\/\/ Result: ImageDownloaderStorage\/example.com\/abc123.png"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Benefits:"}]}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Better performance with 1000+ images"}]}]},{"content":[{"inlineContent":[{"text":"Easy to debug by source","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Cleaner file organization"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"text":"Date-Based Hierarchy","anchor":"Date-Based-Hierarchy","type":"heading"},{"inlineContent":[{"text":"Organize by download date:","type":"text"}],"type":"paragraph"},{"code":["let config = ImageDownloaderConfiguration(","    pathProvider: DateHierarchicalPathProvider()",")","","\/\/ Result: ImageDownloaderStorage\/2025\/10\/06\/abc123.png"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Benefits:"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Time-based analysis"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Easy cleanup of old images"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Archival use cases","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":2,"text":"Identifier Customization","anchor":"Identifier-Customization","type":"heading"},{"level":3,"text":"MD5 (Default)","anchor":"MD5-Default","type":"heading"},{"inlineContent":[{"type":"text","text":"Fast, compatible, good for most use cases:"}],"type":"paragraph"},{"code":["let config = ImageDownloaderConfiguration(","    identifierProvider: MD5IdentifierProvider()",")","","\/\/ Result: d41d8cd98f00b204e9800998ecf8427e"],"syntax":"swift","type":"codeListing"},{"level":3,"text":"SHA256 (More Secure)","anchor":"SHA256-More-Secure","type":"heading"},{"inlineContent":[{"text":"Better security and collision resistance:","type":"text"}],"type":"paragraph"},{"code":["let config = ImageDownloaderConfiguration(","    identifierProvider: SHA256IdentifierProvider()",")","","\/\/ Result: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"],"syntax":"swift","type":"codeListing"},{"level":2,"text":"Combined Customization","anchor":"Combined-Customization","type":"heading"},{"inlineContent":[{"type":"text","text":"Mix and match providers for your use case:"}],"type":"paragraph"},{"level":3,"text":"Photo-Heavy App","anchor":"Photo-Heavy-App","type":"heading"},{"code":["let config = ImageDownloaderConfiguration(","    maxConcurrentDownloads: 8,","    identifierProvider: SHA256IdentifierProvider(),","    pathProvider: DomainHierarchicalPathProvider(),","    compressionProvider: JPEGCompressionProvider(quality: 0.85)",")"],"syntax":"swift","type":"codeListing"},{"level":3,"text":"Space-Constrained App","anchor":"Space-Constrained-App","type":"heading"},{"code":["let config = ImageDownloaderConfiguration(","    compressionProvider: JPEGCompressionProvider(quality: 0.7)",")"],"syntax":"swift","type":"codeListing"},{"level":3,"text":"Large-Scale App (10,000+ Images)","anchor":"Large-Scale-App-10000+-Images","type":"heading"},{"code":["let config = ImageDownloaderConfiguration(","    pathProvider: DomainHierarchicalPathProvider(),","    compressionProvider: AdaptiveCompressionProvider()",")"],"syntax":"swift","type":"codeListing"},{"level":2,"text":"Creating Custom Providers","anchor":"Creating-Custom-Providers","type":"heading"},{"inlineContent":[{"type":"text","text":"Implement the protocols to create your own providers:"}],"type":"paragraph"},{"code":["import ImageDownloader","import CryptoKit","","struct CustomIdentifierProvider: ResourceIdentifierProvider {","    func identifier(for url: URL) -> String {","        \/\/ Your custom logic here","        let urlString = url.absoluteString","        let hash = SHA512.hash(data: Data(urlString.utf8))","        return hash.map { String(format: \"%02x\", $0) }.joined()","    }","}","","\/\/ Use it","let config = ImageDownloaderConfiguration(","    identifierProvider: CustomIdentifierProvider()",")"],"syntax":"swift","type":"codeListing"},{"level":2,"text":"Objective-C Support","anchor":"Objective-C-Support","type":"heading"},{"inlineContent":[{"text":"All built-in providers have Objective-C wrappers:","type":"text"}],"type":"paragraph"},{"code":["@import ImageDownloader;","","\/\/ JPEG compression","IDJPEGCompressionProvider *jpeg = [[IDJPEGCompressionProvider alloc] initWithQuality:0.8];","","\/\/ Domain hierarchy","IDDomainHierarchicalPathProvider *paths = [[IDDomainHierarchicalPathProvider alloc] init];","","\/\/ Apply","IDConfiguration *config = [[IDConfiguration alloc] init];","config.compressionProvider = jpeg;","config.pathProvider = paths;","","[[ImageDownloaderManager shared] configure:config];"],"syntax":"objc","type":"codeListing"},{"level":2,"text":"Performance Impact","anchor":"Performance-Impact","type":"heading"},{"rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Configuration"}]}],[{"type":"paragraph","inlineContent":[{"text":"Disk Usage","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"File System Speed"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Best For"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"PNG + Flat"}]}],[{"type":"paragraph","inlineContent":[{"text":"100%","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Good (<1K files)"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Icons, small images"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"JPEG 0.8 + Flat","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"30%"}]}],[{"type":"paragraph","inlineContent":[{"text":"Good (<1K files)","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Photos, medium apps","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"Adaptive + Domain","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"40%"}]}],[{"type":"paragraph","inlineContent":[{"text":"Excellent (10K+ files)","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Recommended"}]}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"JPEG 0.6 + Domain"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"25%"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Excellent (10K+ files)"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Maximum compression"}]}]]],"header":"row","type":"table"}],"kind":"content"}],"references":{"doc://image-downloader.ImageDownloader/documentation/ImageDownloader/AsyncAwait":{"type":"topic","title":"Async\/Await Support","role":"collectionGroup","kind":"article","url":"\/documentation\/imagedownloader\/asyncawait","abstract":[{"type":"text","text":"Use modern Swift concurrency with async\/await APIs."}],"identifier":"doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/AsyncAwait"},"doc://image-downloader.ImageDownloader/documentation/ImageDownloader/StoragePathProvider":{"abstract":[{"type":"text","text":"Protocol for determining storage paths for resources"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoragePathProvider","kind":"identifier"}],"url":"\/documentation\/imagedownloader\/storagepathprovider","identifier":"doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/StoragePathProvider","title":"StoragePathProvider","kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"text":"StoragePathProvider","kind":"identifier"}]},"doc://image-downloader.ImageDownloader/documentation/ImageDownloader/ResourceIdentifierProvider":{"url":"\/documentation\/imagedownloader\/resourceidentifierprovider","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResourceIdentifierProvider","kind":"identifier"}],"abstract":[{"text":"Protocol for generating unique identifiers for resources","type":"text"}],"navigatorTitle":[{"text":"ResourceIdentifierProvider","kind":"identifier"}],"title":"ResourceIdentifierProvider","identifier":"doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/ResourceIdentifierProvider","role":"symbol"},"doc://image-downloader.ImageDownloader/documentation/ImageDownloader/CompressionProviders":{"type":"topic","title":"Compression Providers","role":"collectionGroup","kind":"article","abstract":[{"text":"Choose how images are compressed for storage.","type":"text"}],"url":"\/documentation\/imagedownloader\/compressionproviders","identifier":"doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/CompressionProviders"},"doc://image-downloader.ImageDownloader/documentation/ImageDownloader/Configuration":{"kind":"article","identifier":"doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/Configuration","type":"topic","url":"\/documentation\/imagedownloader\/configuration","role":"collectionGroup","title":"Configuration","abstract":[{"type":"text","text":"Configure ImageDownloader behavior globally or per-request."}]},"doc://image-downloader.ImageDownloader/documentation/ImageDownloader":{"url":"\/documentation\/imagedownloader","abstract":[{"type":"text","text":"A powerful, production-ready Swift image downloading library with advanced caching, async\/await support, and full customization."}],"role":"collection","type":"topic","kind":"symbol","title":"ImageDownloader","identifier":"doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader"},"doc://image-downloader.ImageDownloader/documentation/ImageDownloader/StorageProviders":{"identifier":"doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/StorageProviders","kind":"article","type":"topic","url":"\/documentation\/imagedownloader\/storageproviders","abstract":[{"type":"text","text":"Organize image files on disk."}],"role":"collectionGroup","title":"Storage Providers"},"doc://image-downloader.ImageDownloader/documentation/ImageDownloader/ImageCompressionProvider":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"ImageCompressionProvider","kind":"identifier"}],"abstract":[{"text":"Protocol for handling image compression and decompression","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ImageCompressionProvider","kind":"identifier"}],"url":"\/documentation\/imagedownloader\/imagecompressionprovider","kind":"symbol","title":"ImageCompressionProvider","identifier":"doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/ImageCompressionProvider"}}}