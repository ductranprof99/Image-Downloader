{"metadata":{"role":"article","modules":[{"name":"ImageDownloader"}],"title":"Getting Started","roleHeading":"Article"},"hierarchy":{"paths":[["doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader"],["doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader","doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/AsyncAwait"]]},"abstract":[{"text":"Download and cache images with just a few lines of code.","type":"text"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/Configuration","doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/AsyncAwait"],"title":"Essentials","anchor":"Essentials"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/imagedownloader\/gettingstarted"]}],"identifier":{"url":"doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/GettingStarted","interfaceLanguage":"swift"},"primaryContentSections":[{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"ImageDownloader provides both modern Swift async\/await APIs and traditional completion handler APIs. Choose the style that fits your project best.","type":"text"}]},{"text":"Installation","level":2,"type":"heading","anchor":"Installation"},{"text":"Swift Package Manager","level":3,"type":"heading","anchor":"Swift-Package-Manager"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add ImageDownloader to your project via Xcode:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"File â†’ Add Packages","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Enter repository URL: ","type":"text"},{"type":"codeVoice","code":"https:\/\/github.com\/ductranprof99\/ImageDownloaderController.git"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Select version: 2.0.0 or later"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Choose targets:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"code":"ImageDownloader","type":"codeVoice"},{"text":" - Core library (required)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"ImageDownloaderUI"},{"type":"text","text":" - UIKit integration"}],"type":"paragraph"}]}],"type":"unorderedList"}]}]},{"type":"paragraph","inlineContent":[{"text":"Or add to ","type":"text"},{"code":"Package.swift","type":"codeVoice"},{"text":":","type":"text"}]},{"type":"codeListing","code":["dependencies: [","    .package(url: \"https:\/\/github.com\/ductranprof99\/ImageDownloaderController.git\", from: \"2.0.0\")","]"],"syntax":"swift"},{"text":"Quick Start (Swift)","level":2,"type":"heading","anchor":"Quick-Start-Swift"},{"text":"Basic Usage with Async\/Await","level":3,"type":"heading","anchor":"Basic-Usage-with-AsyncAwait"},{"type":"codeListing","code":["import ImageDownloader","","\/\/ Simple async\/await","Task {","    do {","        let result = try await ImageDownloaderManager.shared.requestImage(at: imageURL)","        imageView.image = result.image","        print(\"Loaded from: \\(result.fromCache ? \"cache\" : \"network\")\")","    } catch {","        print(\"Error: \\(error)\")","    }","}"],"syntax":"swift"},{"text":"With UIKit Integration","level":3,"type":"heading","anchor":"With-UIKit-Integration"},{"type":"codeListing","code":["import ImageDownloaderUI","","let imageView = AsyncImageView()","imageView.placeholderImage = UIImage(named: \"placeholder\")","imageView.priority = .high","","imageView.onProgress = { progress in","    print(\"Loading: \\(Int(progress * 100))%\")","}","","imageView.loadImage(from: imageURL)"],"syntax":"swift"},{"text":"Using UIImageView Extension","level":3,"type":"heading","anchor":"Using-UIImageView-Extension"},{"type":"codeListing","code":["import ImageDownloaderUI","","imageView.setImage(","    with: imageURL,","    placeholder: UIImage(named: \"placeholder\"),","    priority: .high",")"],"syntax":"swift"},{"text":"Quick Start (Objective-C)","level":2,"type":"heading","anchor":"Quick-Start-Objective-C"},{"type":"codeListing","code":["@import ImageDownloader;","","[[ImageDownloaderManager shared] requestImageAt:imageURL","                                     completion:^(UIImage *image, NSError *error, BOOL fromCache, BOOL fromStorage) {","    if (image) {","        self.imageView.image = image;","    }","}];"],"syntax":"objc"},{"text":"Next Steps","level":2,"type":"heading","anchor":"Next-Steps"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/Configuration","isActive":true,"type":"reference"},{"text":" - Configure caching and storage behavior","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/AsyncAwait"},{"type":"text","text":" - Learn about async\/await features"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"doc:Customization","type":"text"},{"text":" - Customize compression and storage","type":"text"}]}]}]}],"kind":"content"}],"kind":"article","schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://image-downloader.ImageDownloader/documentation/ImageDownloader/AsyncAwait":{"type":"topic","title":"Async\/Await Support","role":"collectionGroup","kind":"article","url":"\/documentation\/imagedownloader\/asyncawait","abstract":[{"type":"text","text":"Use modern Swift concurrency with async\/await APIs."}],"identifier":"doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/AsyncAwait"},"doc://image-downloader.ImageDownloader/documentation/ImageDownloader/Configuration":{"kind":"article","identifier":"doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader\/Configuration","type":"topic","url":"\/documentation\/imagedownloader\/configuration","role":"collectionGroup","title":"Configuration","abstract":[{"type":"text","text":"Configure ImageDownloader behavior globally or per-request."}]},"doc://image-downloader.ImageDownloader/documentation/ImageDownloader":{"url":"\/documentation\/imagedownloader","abstract":[{"type":"text","text":"A powerful, production-ready Swift image downloading library with advanced caching, async\/await support, and full customization."}],"role":"collection","type":"topic","kind":"symbol","title":"ImageDownloader","identifier":"doc:\/\/image-downloader.ImageDownloader\/documentation\/ImageDownloader"}}}