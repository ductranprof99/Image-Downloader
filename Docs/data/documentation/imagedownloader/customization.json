{"metadata":{"modules":[{"name":"ImageDownloader"}],"title":"Customization","roleHeading":"API Collection","role":"collectionGroup"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"ImageDownloader uses a protocol-based architecture that allows you to customize three key aspects:"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Resource Identification"}]},{"text":" - How URLs are converted to unique identifiers","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Storage Paths","type":"text"}]},{"text":" - Where and how files are organized on disk","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Compression"}]},{"type":"text","text":" - How images are compressed for storage"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"All customization is done through providers that implement simple protocols.","type":"text"}]},{"level":2,"text":"Quick Example","type":"heading","anchor":"Quick-Example"},{"type":"codeListing","code":["import ImageDownloader","","\/\/ Use JPEG compression to save 70% disk space","let config = ImageDownloaderConfiguration(","    compressionProvider: JPEGCompressionProvider(quality: 0.8)",")","","ImageDownloaderManager.shared.configure(config)"],"syntax":"swift"},{"level":2,"text":"Compression Customization","type":"heading","anchor":"Compression-Customization"},{"level":3,"text":"JPEG Compression (Recommended for Photos)","type":"heading","anchor":"JPEG-Compression-Recommended-for-Photos"},{"type":"paragraph","inlineContent":[{"text":"Save 50-80% disk space with JPEG compression:","type":"text"}]},{"type":"codeListing","code":["let config = ImageDownloaderConfiguration(","    compressionProvider: JPEGCompressionProvider(quality: 0.8)",")"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Quality Guide:","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"1.0"},{"type":"text","text":" - Maximum quality, minimal compression"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"0.8"},{"type":"text","text":" - Recommended (good balance)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"0.6","type":"codeVoice"},{"type":"text","text":" - High compression, some artifacts"}]}]},{"content":[{"inlineContent":[{"code":"0.4","type":"codeVoice"},{"text":" - Maximum compression, poor quality","type":"text"}],"type":"paragraph"}]}]},{"level":3,"text":"Adaptive Compression (Smart Selection)","type":"heading","anchor":"Adaptive-Compression-Smart-Selection"},{"type":"paragraph","inlineContent":[{"text":"Automatically choose PNG or JPEG based on image size:","type":"text"}]},{"type":"codeListing","code":["let config = ImageDownloaderConfiguration(","    compressionProvider: AdaptiveCompressionProvider(","        sizeThresholdMB: 1.0,  \/\/ Use JPEG if PNG > 1MB","        jpegQuality: 0.85","    )",")"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"How it works:"}],"type":"strong"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Compresses as PNG first","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If PNG size exceeds threshold, re-compresses as JPEG"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Stores the smaller result"}]}]}]},{"level":3,"text":"PNG Compression (Default)","type":"heading","anchor":"PNG-Compression-Default"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Lossless compression, larger file sizes:"}]},{"type":"codeListing","code":["let config = ImageDownloaderConfiguration(","    compressionProvider: PNGCompressionProvider()",")"],"syntax":"swift"},{"level":2,"text":"Storage Path Customization","type":"heading","anchor":"Storage-Path-Customization"},{"level":3,"text":"Flat Storage (Default)","type":"heading","anchor":"Flat-Storage-Default"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All files in a single directory:"}]},{"type":"codeListing","code":["let config = ImageDownloaderConfiguration(","    pathProvider: FlatStoragePathProvider()",")","","\/\/ Result: ImageDownloaderStorage\/abc123_image.png"],"syntax":"swift"},{"level":3,"text":"Domain-Based Hierarchy","type":"heading","anchor":"Domain-Based-Hierarchy"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Organize by domain for better file system performance:"}]},{"type":"codeListing","code":["let config = ImageDownloaderConfiguration(","    pathProvider: DomainHierarchicalPathProvider()",")","","\/\/ Result: ImageDownloaderStorage\/example.com\/abc123.png"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Benefits:","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Better performance with 1000+ images","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Easy to debug by source"}]}]},{"content":[{"inlineContent":[{"text":"Cleaner file organization","type":"text"}],"type":"paragraph"}]}]},{"level":3,"text":"Date-Based Hierarchy","type":"heading","anchor":"Date-Based-Hierarchy"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Organize by download date:"}]},{"type":"codeListing","code":["let config = ImageDownloaderConfiguration(","    pathProvider: DateHierarchicalPathProvider()",")","","\/\/ Result: ImageDownloaderStorage\/2025\/10\/06\/abc123.png"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Benefits:"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Time-based analysis"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Easy cleanup of old images"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Archival use cases","type":"text"}]}]}]},{"level":2,"text":"Identifier Customization","type":"heading","anchor":"Identifier-Customization"},{"level":3,"text":"MD5 (Default)","type":"heading","anchor":"MD5-Default"},{"type":"paragraph","inlineContent":[{"text":"Fast, compatible, good for most use cases:","type":"text"}]},{"type":"codeListing","code":["let config = ImageDownloaderConfiguration(","    identifierProvider: MD5IdentifierProvider()",")","","\/\/ Result: d41d8cd98f00b204e9800998ecf8427e"],"syntax":"swift"},{"level":3,"text":"SHA256 (More Secure)","type":"heading","anchor":"SHA256-More-Secure"},{"type":"paragraph","inlineContent":[{"text":"Better security and collision resistance:","type":"text"}]},{"type":"codeListing","code":["let config = ImageDownloaderConfiguration(","    identifierProvider: SHA256IdentifierProvider()",")","","\/\/ Result: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"],"syntax":"swift"},{"level":2,"text":"Combined Customization","type":"heading","anchor":"Combined-Customization"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Mix and match providers for your use case:"}]},{"level":3,"text":"Photo-Heavy App","type":"heading","anchor":"Photo-Heavy-App"},{"type":"codeListing","code":["let config = ImageDownloaderConfiguration(","    maxConcurrentDownloads: 8,","    identifierProvider: SHA256IdentifierProvider(),","    pathProvider: DomainHierarchicalPathProvider(),","    compressionProvider: JPEGCompressionProvider(quality: 0.85)",")"],"syntax":"swift"},{"level":3,"text":"Space-Constrained App","type":"heading","anchor":"Space-Constrained-App"},{"type":"codeListing","code":["let config = ImageDownloaderConfiguration(","    compressionProvider: JPEGCompressionProvider(quality: 0.7)",")"],"syntax":"swift"},{"level":3,"text":"Large-Scale App (10,000+ Images)","type":"heading","anchor":"Large-Scale-App-10000+-Images"},{"type":"codeListing","code":["let config = ImageDownloaderConfiguration(","    pathProvider: DomainHierarchicalPathProvider(),","    compressionProvider: AdaptiveCompressionProvider()",")"],"syntax":"swift"},{"level":2,"text":"Creating Custom Providers","type":"heading","anchor":"Creating-Custom-Providers"},{"type":"paragraph","inlineContent":[{"text":"Implement the protocols to create your own providers:","type":"text"}]},{"type":"codeListing","code":["import ImageDownloader","import CryptoKit","","struct CustomIdentifierProvider: ResourceIdentifierProvider {","    func identifier(for url: URL) -> String {","        \/\/ Your custom logic here","        let urlString = url.absoluteString","        let hash = SHA512.hash(data: Data(urlString.utf8))","        return hash.map { String(format: \"%02x\", $0) }.joined()","    }","}","","\/\/ Use it","let config = ImageDownloaderConfiguration(","    identifierProvider: CustomIdentifierProvider()",")"],"syntax":"swift"},{"level":2,"text":"Objective-C Support","type":"heading","anchor":"Objective-C-Support"},{"type":"paragraph","inlineContent":[{"text":"All built-in providers have Objective-C wrappers:","type":"text"}]},{"type":"codeListing","code":["@import ImageDownloader;","","\/\/ JPEG compression","IDJPEGCompressionProvider *jpeg = [[IDJPEGCompressionProvider alloc] initWithQuality:0.8];","","\/\/ Domain hierarchy","IDDomainHierarchicalPathProvider *paths = [[IDDomainHierarchicalPathProvider alloc] init];","","\/\/ Apply","IDConfiguration *config = [[IDConfiguration alloc] init];","config.compressionProvider = jpeg;","config.pathProvider = paths;","","[[ImageDownloaderManager shared] configure:config];"],"syntax":"objc"},{"level":2,"text":"Performance Impact","type":"heading","anchor":"Performance-Impact"},{"rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Configuration"}]}],[{"type":"paragraph","inlineContent":[{"text":"Disk Usage","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"File System Speed","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"Best For","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"PNG + Flat"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"100%"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Good (<1K files)"}]}],[{"type":"paragraph","inlineContent":[{"text":"Icons, small images","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"JPEG 0.8 + Flat","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"30%"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Good (<1K files)"}]}],[{"type":"paragraph","inlineContent":[{"text":"Photos, medium apps","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Adaptive + Domain"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"40%"}]}],[{"type":"paragraph","inlineContent":[{"text":"Excellent (10K+ files)","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Recommended"}]}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"JPEG 0.6 + Domain"}]}],[{"type":"paragraph","inlineContent":[{"text":"25%","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Excellent (10K+ files)"}]}],[{"type":"paragraph","inlineContent":[{"text":"Maximum compression","type":"text"}]}]]],"type":"table","header":"row"}]}],"topicSections":[{"title":"Protocols","identifiers":["doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/ResourceIdentifierProvider","doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/StoragePathProvider","doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/ImageCompressionProvider"],"anchor":"Protocols"},{"title":"Related Articles","identifiers":["doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/CompressionProviders","doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/StorageProviders","doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/Configuration"],"anchor":"Related-Articles"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/imagedownloader\/customization"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/Customization"},"kind":"article","hierarchy":{"paths":[["doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader"],["doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader","doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/Configuration"],["doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader","doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/AsyncAwait","doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/Configuration"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Customize how images are identified, stored, and compressed."}],"references":{"doc://imagedownloadercontroller.ImageDownloader/documentation/ImageDownloader/AsyncAwait":{"url":"\/documentation\/imagedownloader\/asyncawait","title":"Async\/Await Support","role":"collectionGroup","kind":"article","abstract":[{"type":"text","text":"Use modern Swift concurrency with async\/await APIs."}],"type":"topic","identifier":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/AsyncAwait"},"doc://imagedownloadercontroller.ImageDownloader/documentation/ImageDownloader/ResourceIdentifierProvider":{"identifier":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/ResourceIdentifierProvider","role":"symbol","url":"\/documentation\/imagedownloader\/resourceidentifierprovider","kind":"symbol","title":"ResourceIdentifierProvider","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResourceIdentifierProvider","kind":"identifier"}],"navigatorTitle":[{"text":"ResourceIdentifierProvider","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for generating unique identifiers for resources"}],"type":"topic"},"doc://imagedownloadercontroller.ImageDownloader/documentation/ImageDownloader/Configuration":{"abstract":[{"type":"text","text":"Configure ImageDownloader behavior globally or per-request."}],"url":"\/documentation\/imagedownloader\/configuration","role":"collectionGroup","identifier":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/Configuration","title":"Configuration","kind":"article","type":"topic"},"doc://imagedownloadercontroller.ImageDownloader/documentation/ImageDownloader/StoragePathProvider":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoragePathProvider","kind":"identifier"}],"navigatorTitle":[{"text":"StoragePathProvider","kind":"identifier"}],"title":"StoragePathProvider","url":"\/documentation\/imagedownloader\/storagepathprovider","type":"topic","abstract":[{"type":"text","text":"Protocol for determining storage paths for resources"}],"role":"symbol","identifier":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/StoragePathProvider","kind":"symbol"},"doc://imagedownloadercontroller.ImageDownloader/documentation/ImageDownloader/StorageProviders":{"type":"topic","url":"\/documentation\/imagedownloader\/storageproviders","kind":"article","identifier":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/StorageProviders","role":"collectionGroup","abstract":[{"text":"Organize image files on disk.","type":"text"}],"title":"Storage Providers"},"doc://imagedownloadercontroller.ImageDownloader/documentation/ImageDownloader/CompressionProviders":{"type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/CompressionProviders","url":"\/documentation\/imagedownloader\/compressionproviders","title":"Compression Providers","abstract":[{"text":"Choose how images are compressed for storage.","type":"text"}]},"doc://imagedownloadercontroller.ImageDownloader/documentation/ImageDownloader":{"role":"collection","abstract":[{"type":"text","text":"A powerful, production-ready Swift image downloading library with advanced caching, async\/await support, and full customization."}],"title":"ImageDownloader","identifier":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader","type":"topic","kind":"symbol","url":"\/documentation\/imagedownloader"},"doc://imagedownloadercontroller.ImageDownloader/documentation/ImageDownloader/ImageCompressionProvider":{"navigatorTitle":[{"kind":"identifier","text":"ImageCompressionProvider"}],"kind":"symbol","url":"\/documentation\/imagedownloader\/imagecompressionprovider","identifier":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/ImageCompressionProvider","abstract":[{"type":"text","text":"Protocol for handling image compression and decompression"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImageCompressionProvider"}],"title":"ImageCompressionProvider"}}}