{"kind":"article","abstract":[{"type":"text","text":"Configure ImageDownloader behavior globally or per-request."}],"metadata":{"role":"collectionGroup","modules":[{"name":"ImageDownloader"}],"title":"Configuration","roleHeading":"API Collection"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/Configuration"},"hierarchy":{"paths":[["doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader"],["doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader","doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/AsyncAwait"]]},"seeAlsoSections":[{"anchor":"Essentials","identifiers":["doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/GettingStarted","doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/AsyncAwait"],"title":"Essentials","generated":true}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/imagedownloader\/configuration"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"ImageDownloader supports both global configuration at app launch and per-request configuration. Use ","type":"text"},{"isActive":true,"identifier":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/ImageDownloaderConfiguration","type":"reference"},{"text":" for type-safe Swift configuration or ","type":"text"},{"isActive":true,"identifier":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/IDConfiguration","type":"reference"},{"text":" for Objective-C.","type":"text"}]},{"text":"Global Configuration","anchor":"Global-Configuration","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Configure once at app launch for optimal performance:","type":"text"}]},{"code":["import ImageDownloader","","@main","class AppDelegate: UIResponder, UIApplicationDelegate {","    func application(_ application: UIApplication,","                     didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {","","        \/\/ Configure ImageDownloader","        let config = ImageDownloaderConfiguration(","            maxConcurrentDownloads: 6,","            timeout: 30,","            highCachePriority: 100,","            lowCachePriority: 200,","            shouldSaveToStorage: true","        )","","        ImageDownloaderManager.shared.configure(config)","","        return true","    }","}"],"type":"codeListing","syntax":"swift"},{"text":"Predefined Configurations","anchor":"Predefined-Configurations","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use built-in presets for common scenarios:"}]},{"text":"Default Configuration","anchor":"Default-Configuration","type":"heading","level":3},{"code":["ImageDownloaderManager.shared.configure(.default)","\/\/ - 4 concurrent downloads","\/\/ - 50 high priority cache items","\/\/ - 100 low priority cache items","\/\/ - PNG compression"],"type":"codeListing","syntax":"swift"},{"text":"High Performance","anchor":"High-Performance","type":"heading","level":3},{"code":["ImageDownloaderManager.shared.configure(.highPerformance)","\/\/ - 8 concurrent downloads","\/\/ - 100 high priority cache items","\/\/ - 200 low priority cache items","\/\/ - Optimized for photo-heavy apps"],"type":"codeListing","syntax":"swift"},{"text":"Low Memory","anchor":"Low-Memory","type":"heading","level":3},{"code":["ImageDownloaderManager.shared.configure(.lowMemory)","\/\/ - 2 concurrent downloads","\/\/ - 20 high priority cache items","\/\/ - 50 low priority cache items","\/\/ - Optimized for memory-constrained devices"],"type":"codeListing","syntax":"swift"},{"text":"Configuration Options","anchor":"Configuration-Options","type":"heading","level":2},{"text":"Network Settings","anchor":"Network-Settings","type":"heading","level":3},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"maxConcurrentDownloads"}],"type":"strong"},{"type":"text","text":": Maximum parallel downloads (default: 4)"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"timeout","type":"text"}],"type":"strong"},{"type":"text","text":": Request timeout in seconds (default: 30)"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Cache Settings","anchor":"Cache-Settings","type":"heading","level":3},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"highCachePriority"}],"type":"strong"},{"type":"text","text":": High priority cache limit (default: 50)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"lowCachePriority"}]},{"type":"text","text":": Low priority cache limit (default: 100)"}]}]}],"type":"unorderedList"},{"text":"Storage Settings","anchor":"Storage-Settings","type":"heading","level":3},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"storagePath","type":"text"}]},{"text":": Custom storage path (nil = default Caches directory)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"shouldSaveToStorage"}]},{"type":"text","text":": Auto-save to disk (default: true)"}]}]}],"type":"unorderedList"},{"text":"Advanced Settings","anchor":"Advanced-Settings","type":"heading","level":3},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"enableDebugLogging"}]},{"type":"text","text":": Enable debug logs (default: false)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"enableRetry","type":"text"}],"type":"strong"},{"text":": Retry failed downloads (default: false)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"retryAttempts","type":"text"}]},{"type":"text","text":": Number of retry attempts (default: 3)"}]}]}],"type":"unorderedList"},{"text":"Per-Request Configuration","anchor":"Per-Request-Configuration","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Override global settings for specific requests:","type":"text"}]},{"code":["let result = try await ImageDownloaderManager.shared.requestImage(","    at: url,","    priority: .high,              \/\/ Override priority","    shouldSaveToStorage: false    \/\/ Override storage behavior",")"],"type":"codeListing","syntax":"swift"},{"text":"Accessing Current Configuration","anchor":"Accessing-Current-Configuration","type":"heading","level":2},{"code":["let config = ImageDownloaderManager.shared.configuration","print(\"Max concurrent: \\(config.maxConcurrentDownloads)\")","print(\"Compression: \\(config.compressionProvider.name)\")"],"type":"codeListing","syntax":"swift"},{"text":"Objective-C Configuration","anchor":"Objective-C-Configuration","type":"heading","level":2},{"code":["@import ImageDownloader;","","\/\/ Use predefined configuration","[[ImageDownloaderManager shared] configure:[IDConfiguration defaultConfiguration]];","","\/\/ Or customize","IDConfiguration *config = [[IDConfiguration alloc] init];","config.maxConcurrentDownloads = 6;","config.highCachePriority = 100;","config.shouldSaveToStorage = YES;","","[[ImageDownloaderManager shared] configure:config];"],"type":"codeListing","syntax":"objc"}]}],"topicSections":[{"anchor":"Configuration-Types","identifiers":["doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/ImageDownloaderConfiguration","doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/IDConfiguration"],"title":"Configuration Types"},{"anchor":"Related","identifiers":["doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/CompressionProviders","doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/StorageProviders"],"title":"Related"}],"references":{"doc://imagedownloadercontroller.ImageDownloader/documentation/ImageDownloader/CompressionProviders":{"type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/CompressionProviders","url":"\/documentation\/imagedownloader\/compressionproviders","title":"Compression Providers","abstract":[{"text":"Choose how images are compressed for storage.","type":"text"}]},"doc://imagedownloadercontroller.ImageDownloader/documentation/ImageDownloader/IDConfiguration":{"kind":"symbol","url":"\/documentation\/imagedownloader\/idconfiguration","title":"IDConfiguration","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"IDConfiguration"}],"navigatorTitle":[{"kind":"identifier","text":"IDConfiguration"}],"identifier":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/IDConfiguration","abstract":[{"type":"text","text":"Objective-C compatible configuration class"}],"role":"symbol"},"doc://imagedownloadercontroller.ImageDownloader/documentation/ImageDownloader/ImageDownloaderConfiguration":{"abstract":[{"text":"Swift configuration struct","type":"text"}],"identifier":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/ImageDownloaderConfiguration","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ImageDownloaderConfiguration","kind":"identifier"}],"title":"ImageDownloaderConfiguration","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"ImageDownloaderConfiguration","kind":"identifier"}],"url":"\/documentation\/imagedownloader\/imagedownloaderconfiguration"},"doc://imagedownloadercontroller.ImageDownloader/documentation/ImageDownloader/AsyncAwait":{"url":"\/documentation\/imagedownloader\/asyncawait","title":"Async\/Await Support","role":"collectionGroup","kind":"article","abstract":[{"type":"text","text":"Use modern Swift concurrency with async\/await APIs."}],"type":"topic","identifier":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/AsyncAwait"},"doc://imagedownloadercontroller.ImageDownloader/documentation/ImageDownloader/GettingStarted":{"title":"Getting Started","type":"topic","kind":"article","url":"\/documentation\/imagedownloader\/gettingstarted","abstract":[{"text":"Download and cache images with just a few lines of code.","type":"text"}],"identifier":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/GettingStarted","role":"article"},"doc://imagedownloadercontroller.ImageDownloader/documentation/ImageDownloader/StorageProviders":{"type":"topic","url":"\/documentation\/imagedownloader\/storageproviders","kind":"article","identifier":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader\/StorageProviders","role":"collectionGroup","abstract":[{"text":"Organize image files on disk.","type":"text"}],"title":"Storage Providers"},"doc://imagedownloadercontroller.ImageDownloader/documentation/ImageDownloader":{"role":"collection","abstract":[{"type":"text","text":"A powerful, production-ready Swift image downloading library with advanced caching, async\/await support, and full customization."}],"title":"ImageDownloader","identifier":"doc:\/\/imagedownloadercontroller.ImageDownloader\/documentation\/ImageDownloader","type":"topic","kind":"symbol","url":"\/documentation\/imagedownloader"}}}